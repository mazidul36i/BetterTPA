plugins {
    id 'java'
}

group = "com.gliesestudio.mc"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven {
        name = "papermc"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// Define the output directory for the copied jar
def externalDir = file("/home/mazidul/Apps/Paper 1.21.1/plugins")

// Ensure the directory exists before copying the jar
tasks.register("createOutputDir") {
    doLast {
        if (!externalDir.exists()) {
            println "Creating directory: $externalDir"
            externalDir.mkdirs()
        } else {
            println "Directory already exists: $externalDir"
        }
    }
}

// Custom task to copy the jar file after it's built
tasks.register('copyJar', Copy) {
    dependsOn tasks.jar
    from tasks.named('jar').get().archiveFile
    into externalDir
    doLast {
        println "JAR file copied to $externalDir"
    }
}

// Ensure the output directory exists before copying
tasks.copyJar {
    dependsOn tasks.createOutputDir
}

// Make the `build` task depend on `copyJar`
tasks.build {
    dependsOn tasks.copyJar
}
